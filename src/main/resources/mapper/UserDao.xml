<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.nanqiao.dao.UserDao">

    <resultMap type="com.qf.nanqiao.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="findByUsername" resultMap="UserMap" parameterType="string">
        select id,
               username,
               password,
               avatar,
               phone,
               email,
               age,
               sex,
               address,
               create_time
        from user
        where username = #{username}
    </select>

    <select id="findByPhone" resultMap="UserMap" parameterType="string">
        select id,
               username,
               password,
               avatar,
               phone,
               email,
               age,
               sex,
               address,
               create_time
        from user
        where phone = #{phone} limit 1
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select id,
               username,
               password,
               avatar,
               phone,
               email,
               age,
               sex,
               address,
               create_time
        from user
        where id = #{id}
    </select>

    <!--查询全部数据-->
    <select id="findAll" resultMap="UserMap">
        select id,
               username,
               password,
               avatar,
               phone,
               email,
               age,
               sex,
               address,
               create_time
        from user
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(username, password, avatar, phone, email, age, sex, address, create_time)
        values (#{username}, #{password}, #{avatar}, #{phone}, #{email}, #{age}, #{sex}, #{address}, #{createTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(username, password, avatar, phone, email, age, sex, address, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.avatar}, #{entity.phone}, #{entity.email}, #{entity.age},
            #{entity.sex}, #{entity.address}, #{entity.createTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(username, password, avatar, phone, email, age, sex, address, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.avatar}, #{entity.phone}, #{entity.email}, #{entity.age},
            #{entity.sex}, #{entity.address}, #{entity.createTime})
        </foreach>
        on duplicate key update
        username = values(username),
        password = values(password),
        avatar = values(avatar),
        phone = values(phone),
        email = values(email),
        age = values(age),
        sex = values(sex),
        address = values(address),
        create_time = values(create_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from user
        where id = #{id}
    </delete>

</mapper>

